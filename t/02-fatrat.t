use Test;
use Rat::Precise;

plan 216;

can-ok( FatRat, 'precise', 'FatRat can .precise');

# Testing terminating powers of 2 denominator

is(FatRat.new( 1,2**0).precise, '1', 'Testing FatRat .5**0');
is(FatRat.new( 1,2**1).precise, '0.5', 'Testing FatRat .5**1');
is(FatRat.new( 1,2**2).precise, '0.25', 'Testing FatRat .5**2');
is(FatRat.new( 1,2**3).precise, '0.125', 'Testing FatRat .5**3');
is(FatRat.new( 1,2**4).precise, '0.0625', 'Testing FatRat .5**4');
is(FatRat.new( 1,2**5).precise, '0.03125', 'Testing FatRat .5**5');
is(FatRat.new( 1,2**6).precise, '0.015625', 'Testing FatRat .5**6');
is(FatRat.new( 1,2**7).precise, '0.0078125', 'Testing FatRat .5**7');
is(FatRat.new( 1,2**8).precise, '0.00390625', 'Testing FatRat .5**8');
is(FatRat.new( 1,2**9).precise, '0.001953125', 'Testing FatRat .5**9');
is(FatRat.new(1,2**10).precise, '0.0009765625', 'Testing FatRat .5**10');
is(FatRat.new(1,2**11).precise, '0.00048828125', 'Testing FatRat .5**11');
is(FatRat.new(1,2**12).precise, '0.000244140625', 'Testing FatRat .5**12');
is(FatRat.new(1,2**13).precise, '0.0001220703125', 'Testing FatRat .5**13');
is(FatRat.new(1,2**14).precise, '0.00006103515625', 'Testing FatRat .5**14');
is(FatRat.new(1,2**15).precise, '0.000030517578125', 'Testing FatRat .5**15');
is(FatRat.new(1,2**16).precise, '0.0000152587890625', 'Testing FatRat .5**16');
is(FatRat.new(1,2**17).precise, '0.00000762939453125', 'Testing FatRat .5**17');
is(FatRat.new(1,2**18).precise, '0.000003814697265625', 'Testing FatRat .5**18');
is(FatRat.new(1,2**19).precise, '0.0000019073486328125', 'Testing FatRat .5**19');
is(FatRat.new(1,2**20).precise, '0.00000095367431640625', 'Testing FatRat .5**20');
is(FatRat.new(1,2**21).precise, '0.000000476837158203125', 'Testing FatRat .5**21');
is(FatRat.new(1,2**22).precise, '0.0000002384185791015625', 'Testing FatRat .5**22');
is(FatRat.new(1,2**23).precise, '0.00000011920928955078125', 'Testing FatRat .5**23');
is(FatRat.new(1,2**24).precise, '0.000000059604644775390625', 'Testing FatRat .5**24');
is(FatRat.new(1,2**25).precise, '0.0000000298023223876953125', 'Testing FatRat .5**25');
is(FatRat.new(1,2**26).precise, '0.00000001490116119384765625', 'Testing FatRat .5**26');
is(FatRat.new(1,2**27).precise, '0.000000007450580596923828125', 'Testing FatRat .5**27');
is(FatRat.new(1,2**28).precise, '0.0000000037252902984619140625', 'Testing FatRat .5**28');
is(FatRat.new(1,2**29).precise, '0.00000000186264514923095703125', 'Testing FatRat .5**29');
is(FatRat.new(1,2**30).precise, '0.000000000931322574615478515625', 'Testing FatRat .5**30');
is(FatRat.new(1,2**31).precise, '0.0000000004656612873077392578125', 'Testing FatRat .5**31');
is(FatRat.new(1,2**32).precise, '0.00000000023283064365386962890625', 'Testing FatRat .5**32');
is(FatRat.new(1,2**33).precise, '0.000000000116415321826934814453125', 'Testing FatRat .5**33');
is(FatRat.new(1,2**34).precise, '0.0000000000582076609134674072265625', 'Testing FatRat .5**34');
is(FatRat.new(1,2**35).precise, '0.00000000002910383045673370361328125', 'Testing FatRat .5**35');
is(FatRat.new(1,2**36).precise, '0.000000000014551915228366851806640625', 'Testing FatRat .5**36');
is(FatRat.new(1,2**37).precise, '0.0000000000072759576141834259033203125', 'Testing FatRat .5**37');
is(FatRat.new(1,2**38).precise, '0.00000000000363797880709171295166015625', 'Testing FatRat .5**38');
is(FatRat.new(1,2**39).precise, '0.000000000001818989403545856475830078125', 'Testing FatRat .5**39');
is(FatRat.new(1,2**40).precise, '0.0000000000009094947017729282379150390625', 'Testing FatRat .5**40');
is(FatRat.new(1,2**41).precise, '0.00000000000045474735088646411895751953125', 'Testing FatRat .5**41');
is(FatRat.new(1,2**42).precise, '0.000000000000227373675443232059478759765625', 'Testing FatRat .5**42');
is(FatRat.new(1,2**43).precise, '0.0000000000001136868377216160297393798828125', 'Testing FatRat .5**43');
is(FatRat.new(1,2**44).precise, '0.00000000000005684341886080801486968994140625', 'Testing FatRat .5**44');
is(FatRat.new(1,2**45).precise, '0.000000000000028421709430404007434844970703125', 'Testing FatRat .5**45');
is(FatRat.new(1,2**46).precise, '0.0000000000000142108547152020037174224853515625', 'Testing FatRat .5**46');
is(FatRat.new(1,2**47).precise, '0.00000000000000710542735760100185871124267578125', 'Testing FatRat .5**47');
is(FatRat.new(1,2**48).precise, '0.000000000000003552713678800500929355621337890625', 'Testing FatRat .5**48');
is(FatRat.new(1,2**49).precise, '0.0000000000000017763568394002504646778106689453125', 'Testing FatRat .5**49');
is(FatRat.new(1,2**50).precise, '0.00000000000000088817841970012523233890533447265625', 'Testing FatRat .5**50');
is(FatRat.new(1,2**51).precise, '0.000000000000000444089209850062616169452667236328125', 'Testing FatRat .5**51');
is(FatRat.new(1,2**52).precise, '0.0000000000000002220446049250313080847263336181640625', 'Testing FatRat .5**52');
is(FatRat.new(1,2**53).precise, '0.00000000000000011102230246251565404236316680908203125', 'Testing FatRat .5**53');
is(FatRat.new(1,2**54).precise, '0.000000000000000055511151231257827021181583404541015625', 'Testing FatRat .5**54');
is(FatRat.new(1,2**55).precise, '0.0000000000000000277555756156289135105907917022705078125', 'Testing FatRat .5**55');
is(FatRat.new(1,2**56).precise, '0.00000000000000001387778780781445675529539585113525390625', 'Testing FatRat .5**56');
is(FatRat.new(1,2**57).precise, '0.000000000000000006938893903907228377647697925567626953125', 'Testing FatRat .5**57');
is(FatRat.new(1,2**58).precise, '0.0000000000000000034694469519536141888238489627838134765625', 'Testing FatRat .5**58');
is(FatRat.new(1,2**59).precise, '0.00000000000000000173472347597680709441192448139190673828125', 'Testing FatRat .5**59');
is(FatRat.new(1,2**60).precise, '0.000000000000000000867361737988403547205962240695953369140625', 'Testing FatRat .5**60');
is(FatRat.new(1,2**61).precise, '0.0000000000000000004336808689942017736029811203479766845703125', 'Testing FatRat .5**61');
is(FatRat.new(1,2**62).precise, '0.00000000000000000021684043449710088680149056017398834228515625', 'Testing FatRat .5**62');
is(FatRat.new(1,2**63).precise, '0.000000000000000000108420217248550443400745280086994171142578125', 'Testing FatRat .5**63');
is(FatRat.new(1,2**64).precise, '0.0000000000000000000542101086242752217003726400434970855712890625', 'Testing FatRat .5**64');
is(FatRat.new(1,2**65).precise, '0.00000000000000000002710505431213761085018632002174854278564453125', 'Testing FatRat .5**65');
is(FatRat.new(1,2**66).precise, '0.000000000000000000013552527156068805425093160010874271392822265625', 'Testing FatRat .5**66');
is(FatRat.new(1,2**67).precise, '0.0000000000000000000067762635780344027125465800054371356964111328125', 'Testing FatRat .5**67');
is(FatRat.new(1,2**68).precise, '0.00000000000000000000338813178901720135627329000271856784820556640625', 'Testing FatRat .5**68');
is(FatRat.new(1,2**69).precise, '0.000000000000000000001694065894508600678136645001359283924102783203125', 'Testing FatRat .5**69');
is(FatRat.new(1,2**70).precise, '0.0000000000000000000008470329472543003390683225006796419620513916015625', 'Testing FatRat .5**70');
is(FatRat.new(1,2**71).precise, '0.00000000000000000000042351647362715016953416125033982098102569580078125', 'Testing FatRat .5**71');
is(FatRat.new(1,2**72).precise, '0.000000000000000000000211758236813575084767080625169910490512847900390625', 'Testing FatRat .5**72');
is(FatRat.new(1,2**73).precise, '0.0000000000000000000001058791184067875423835403125849552452564239501953125', 'Testing FatRat .5**73');
is(FatRat.new(1,2**74).precise, '0.00000000000000000000005293955920339377119177015629247762262821197509765625', 'Testing FatRat .5**74');
is(FatRat.new(1,2**75).precise, '0.000000000000000000000026469779601696885595885078146238811314105987548828125', 'Testing FatRat .5**75');
is(FatRat.new(1,2**76).precise, '0.0000000000000000000000132348898008484427979425390731194056570529937744140625', 'Testing FatRat .5**76');
is(FatRat.new(1,2**77).precise, '0.00000000000000000000000661744490042422139897126953655970282852649688720703125', 'Testing FatRat .5**77');
is(FatRat.new(1,2**78).precise, '0.000000000000000000000003308722450212110699485634768279851414263248443603515625', 'Testing FatRat .5**78');
is(FatRat.new(1,2**79).precise, '0.0000000000000000000000016543612251060553497428173841399257071316242218017578125', 'Testing FatRat .5**79');
is(FatRat.new(1,2**80).precise, '0.00000000000000000000000082718061255302767487140869206996285356581211090087890625', 'Testing FatRat .5**80');
is(FatRat.new(1,2**81).precise, '0.000000000000000000000000413590306276513837435704346034981426782906055450439453125', 'Testing FatRat .5**81');
is(FatRat.new(1,2**82).precise, '0.0000000000000000000000002067951531382569187178521730174907133914530277252197265625', 'Testing FatRat .5**82');
is(FatRat.new(1,2**83).precise, '0.00000000000000000000000010339757656912845935892608650874535669572651386260986328125', 'Testing FatRat .5**83');
is(FatRat.new(1,2**84).precise, '0.000000000000000000000000051698788284564229679463043254372678347863256931304931640625', 'Testing FatRat .5**84');
is(FatRat.new(1,2**85).precise, '0.0000000000000000000000000258493941422821148397315216271863391739316284656524658203125', 'Testing FatRat .5**85');
is(FatRat.new(1,2**86).precise, '0.00000000000000000000000001292469707114105741986576081359316958696581423282623291015625', 'Testing FatRat .5**86');
is(FatRat.new(1,2**87).precise, '0.000000000000000000000000006462348535570528709932880406796584793482907116413116455078125', 'Testing FatRat .5**87');
is(FatRat.new(1,2**88).precise, '0.0000000000000000000000000032311742677852643549664402033982923967414535582065582275390625', 'Testing FatRat .5**88');
is(FatRat.new(1,2**89).precise, '0.00000000000000000000000000161558713389263217748322010169914619837072677910327911376953125', 'Testing FatRat .5**89');
is(FatRat.new(1,2**90).precise, '0.000000000000000000000000000807793566946316088741610050849573099185363389551639556884765625', 'Testing FatRat .5**90');

# Testing terminating powers of 5 denominator

is(FatRat.new(1, 5**1).precise, '0.2', 'Testing FatRat .2**1');
is(FatRat.new(1, 5**2).precise, '0.04', 'Testing FatRat .2**2');
is(FatRat.new(1, 5**3).precise, '0.008', 'Testing FatRat .2**3');
is(FatRat.new(1, 5**4).precise, '0.0016', 'Testing FatRat .2**4');
is(FatRat.new(1, 5**5).precise, '0.00032', 'Testing FatRat .2**5');
is(FatRat.new(1, 5**6).precise, '0.000064', 'Testing FatRat .2**6');
is(FatRat.new(1, 5**7).precise, '0.0000128', 'Testing FatRat .2**7');
is(FatRat.new(1, 5**8).precise, '0.00000256', 'Testing FatRat .2**8');
is(FatRat.new(1, 5**9).precise, '0.000000512', 'Testing FatRat .2**9');
is(FatRat.new(1,5**10).precise, '0.0000001024', 'Testing FatRat .2**10');
is(FatRat.new(1,5**11).precise, '0.00000002048', 'Testing FatRat .2**11');
is(FatRat.new(1,5**12).precise, '0.000000004096', 'Testing FatRat .2**12');
is(FatRat.new(1,5**13).precise, '0.0000000008192', 'Testing FatRat .2**13');
is(FatRat.new(1,5**14).precise, '0.00000000016384', 'Testing FatRat .2**14');
is(FatRat.new(1,5**15).precise, '0.000000000032768', 'Testing FatRat .2**15');
is(FatRat.new(1,5**16).precise, '0.0000000000065536', 'Testing FatRat .2**16');
is(FatRat.new(1,5**17).precise, '0.00000000000131072', 'Testing FatRat .2**17');
is(FatRat.new(1,5**18).precise, '0.000000000000262144', 'Testing FatRat .2**18');
is(FatRat.new(1,5**19).precise, '0.0000000000000524288', 'Testing FatRat .2**19');
is(FatRat.new(1,5**20).precise, '0.00000000000001048576', 'Testing FatRat .2**20');
is(FatRat.new(1,5**21).precise, '0.000000000000002097152', 'Testing FatRat .2**21');
is(FatRat.new(1,5**22).precise, '0.0000000000000004194304', 'Testing FatRat .2**22');
is(FatRat.new(1,5**23).precise, '0.00000000000000008388608', 'Testing FatRat .2**23');
is(FatRat.new(1,5**24).precise, '0.000000000000000016777216', 'Testing FatRat .2**24');
is(FatRat.new(1,5**25).precise, '0.0000000000000000033554432', 'Testing FatRat .2**25');
is(FatRat.new(1,5**26).precise, '0.00000000000000000067108864', 'Testing FatRat .2**26');
is(FatRat.new(1,5**27).precise, '0.000000000000000000134217728', 'Testing FatRat .2**27');
is(FatRat.new(1,5**28).precise, '0.0000000000000000000268435456', 'Testing FatRat .2**28');
is(FatRat.new(1,5**29).precise, '0.00000000000000000000536870912', 'Testing FatRat .2**29');
is(FatRat.new(1,5**30).precise, '0.000000000000000000001073741824', 'Testing FatRat .2**30');
is(FatRat.new(1,5**31).precise, '0.0000000000000000000002147483648', 'Testing FatRat .2**31');
is(FatRat.new(1,5**32).precise, '0.00000000000000000000004294967296', 'Testing FatRat .2**32');
is(FatRat.new(1,5**33).precise, '0.000000000000000000000008589934592', 'Testing FatRat .2**33');
is(FatRat.new(1,5**34).precise, '0.0000000000000000000000017179869184', 'Testing FatRat .2**34');
is(FatRat.new(1,5**35).precise, '0.00000000000000000000000034359738368', 'Testing FatRat .2**35');
is(FatRat.new(1,5**36).precise, '0.000000000000000000000000068719476736', 'Testing FatRat .2**36');
is(FatRat.new(1,5**37).precise, '0.0000000000000000000000000137438953472', 'Testing FatRat .2**37');
is(FatRat.new(1,5**38).precise, '0.00000000000000000000000000274877906944', 'Testing FatRat .2**38');
is(FatRat.new(1,5**39).precise, '0.000000000000000000000000000549755813888', 'Testing FatRat .2**39');
is(FatRat.new(1,5**40).precise, '0.0000000000000000000000000001099511627776', 'Testing FatRat .2**40');
is(FatRat.new(1,5**41).precise, '0.00000000000000000000000000002199023255552', 'Testing FatRat .2**41');
is(FatRat.new(1,5**42).precise, '0.000000000000000000000000000004398046511104', 'Testing FatRat .2**42');
is(FatRat.new(1,5**43).precise, '0.0000000000000000000000000000008796093022208', 'Testing FatRat .2**43');
is(FatRat.new(1,5**44).precise, '0.00000000000000000000000000000017592186044416', 'Testing FatRat .2**44');
is(FatRat.new(1,5**45).precise, '0.000000000000000000000000000000035184372088832', 'Testing FatRat .2**45');
is(FatRat.new(1,5**46).precise, '0.0000000000000000000000000000000070368744177664', 'Testing FatRat .2**46');
is(FatRat.new(1,5**47).precise, '0.00000000000000000000000000000000140737488355328', 'Testing FatRat .2**47');
is(FatRat.new(1,5**48).precise, '0.000000000000000000000000000000000281474976710656', 'Testing FatRat .2**48');
is(FatRat.new(1,5**49).precise, '0.0000000000000000000000000000000000562949953421312', 'Testing FatRat .2**49');
is(FatRat.new(1,5**50).precise, '0.00000000000000000000000000000000001125899906842624', 'Testing FatRat .2**50');
is(FatRat.new(1,5**51).precise, '0.000000000000000000000000000000000002251799813685248', 'Testing FatRat .2**51');
is(FatRat.new(1,5**52).precise, '0.0000000000000000000000000000000000004503599627370496', 'Testing FatRat .2**52');
is(FatRat.new(1,5**53).precise, '0.00000000000000000000000000000000000009007199254740992', 'Testing FatRat .2**53');
is(FatRat.new(1,5**54).precise, '0.000000000000000000000000000000000000018014398509481984', 'Testing FatRat .2**54');
is(FatRat.new(1,5**55).precise, '0.0000000000000000000000000000000000000036028797018963968', 'Testing FatRat .2**55');
is(FatRat.new(1,5**56).precise, '0.00000000000000000000000000000000000000072057594037927936', 'Testing FatRat .2**56');
is(FatRat.new(1,5**57).precise, '0.000000000000000000000000000000000000000144115188075855872', 'Testing FatRat .2**57');
is(FatRat.new(1,5**58).precise, '0.0000000000000000000000000000000000000000288230376151711744', 'Testing FatRat .2**58');
is(FatRat.new(1,5**59).precise, '0.00000000000000000000000000000000000000000576460752303423488', 'Testing FatRat .2**59');
is(FatRat.new(1,5**60).precise, '0.000000000000000000000000000000000000000001152921504606846976', 'Testing FatRat .2**60');
is(FatRat.new(1,5**61).precise, '0.0000000000000000000000000000000000000000002305843009213693952', 'Testing FatRat .2**61');
is(FatRat.new(1,5**62).precise, '0.00000000000000000000000000000000000000000004611686018427387904', 'Testing FatRat .2**62');
is(FatRat.new(1,5**63).precise, '0.000000000000000000000000000000000000000000009223372036854775808', 'Testing FatRat .2**63');
is(FatRat.new(1,5**64).precise, '0.0000000000000000000000000000000000000000000018446744073709551616', 'Testing FatRat .2**64');



is(FatRat.new( 1,1).precise(45), '1', 'Testing digits parameter 1/1');
is(FatRat.new( 1,2).precise(45), '0.5', 'Testing digits parameter 1/2');
is(FatRat.new( 1,3).precise(45), '0.333333333333333333333333333333333333333333333', 'Testing digits parameter 1/3');
is(FatRat.new( 1,4).precise(45), '0.25', 'Testing digits parameter 1/4');
is(FatRat.new( 1,5).precise(45), '0.2', 'Testing digits parameter 1/5');
is(FatRat.new( 1,6).precise(45), '0.166666666666666666666666666666666666666666667', 'Testing digits parameter 1/6');
is(FatRat.new( 1,7).precise(45), '0.142857142857142857142857142857142857142857143', 'Testing digits parameter 1/7');
is(FatRat.new( 1,8).precise(45), '0.125', 'Testing digits parameter 1/8');
is(FatRat.new( 1,9).precise(45), '0.111111111111111111111111111111111111111111111', 'Testing digits parameter 1/9');
is(FatRat.new(1,10).precise(45), '0.1', 'Testing digits parameter 1/10');
is(FatRat.new(1,11).precise(45), '0.090909090909090909090909090909090909090909091', 'Testing digits parameter 1/11');
is(FatRat.new(1,12).precise(45), '0.083333333333333333333333333333333333333333333', 'Testing digits parameter 1/12');
is(FatRat.new(1,13).precise(45), '0.076923076923076923076923076923076923076923077', 'Testing digits parameter 1/13');
is(FatRat.new(1,14).precise(45), '0.071428571428571428571428571428571428571428571', 'Testing digits parameter 1/14');
is(FatRat.new(1,15).precise(45), '0.066666666666666666666666666666666666666666667', 'Testing digits parameter 1/15');
is(FatRat.new(1,16).precise(45), '0.0625', 'Testing digits parameter 1/16');
is(FatRat.new(1,17).precise(45), '0.058823529411764705882352941176470588235294118', 'Testing digits parameter 1/17');
is(FatRat.new(1,18).precise(45), '0.055555555555555555555555555555555555555555556', 'Testing digits parameter 1/18');
is(FatRat.new(1,19).precise(45), '0.052631578947368421052631578947368421052631579', 'Testing digits parameter 1/19');
is(FatRat.new(1,20).precise(45), '0.05', 'Testing digits parameter 1/20');
is(FatRat.new(1,21).precise(45), '0.047619047619047619047619047619047619047619048', 'Testing digits parameter 1/21');
is(FatRat.new(1,22).precise(45), '0.045454545454545454545454545454545454545454545', 'Testing digits parameter 1/22');
is(FatRat.new(1,23).precise(45), '0.04347826086956521739130434782608695652173913', 'Testing digits parameter 1/23');
is(FatRat.new(1,24).precise(45), '0.041666666666666666666666666666666666666666667', 'Testing digits parameter 1/24');
is(FatRat.new(1,25).precise(45), '0.04', 'Testing digits parameter 1/25');


is(FatRat.new( 1,1).precise(45, :z), '1', 'Testing digits with :z flag parameter 1/1');
is(FatRat.new( 1,2).precise(45, :z), '0.500000000000000000000000000000000000000000000', 'Testing digits with :z flag parameter 1/2');
is(FatRat.new( 1,3).precise(45, :z), '0.333333333333333333333333333333333333333333333', 'Testing digits with :z flag parameter 1/3');
is(FatRat.new( 1,4).precise(45, :z), '0.250000000000000000000000000000000000000000000', 'Testing digits with :z flag parameter 1/4');
is(FatRat.new( 1,5).precise(45, :z), '0.200000000000000000000000000000000000000000000', 'Testing digits with :z flag parameter 1/5');
is(FatRat.new( 1,6).precise(45, :z), '0.166666666666666666666666666666666666666666667', 'Testing digits with :z flag parameter 1/6');
is(FatRat.new( 1,7).precise(45, :z), '0.142857142857142857142857142857142857142857143', 'Testing digits with :z flag parameter 1/7');
is(FatRat.new( 1,8).precise(45, :z), '0.125000000000000000000000000000000000000000000', 'Testing digits with :z flag parameter 1/8');
is(FatRat.new( 1,9).precise(45, :z), '0.111111111111111111111111111111111111111111111', 'Testing digits with :z flag parameter 1/9');
is(FatRat.new(1,10).precise(45 ,:z), '0.100000000000000000000000000000000000000000000', 'Testing digits with :z flag parameter 1/10');
is(FatRat.new(1,11).precise(45, :z), '0.090909090909090909090909090909090909090909091', 'Testing digits with :z flag parameter 1/11');
is(FatRat.new(1,12).precise(45, :z), '0.083333333333333333333333333333333333333333333', 'Testing digits with :z flag parameter 1/12');
is(FatRat.new(1,13).precise(45, :z), '0.076923076923076923076923076923076923076923077', 'Testing digits with :z flag parameter 1/13');
is(FatRat.new(1,14).precise(45, :z), '0.071428571428571428571428571428571428571428571', 'Testing digits with :z flag parameter 1/14');
is(FatRat.new(1,15).precise(45, :z), '0.066666666666666666666666666666666666666666667', 'Testing digits with :z flag parameter 1/15');
is(FatRat.new(1,16).precise(45, :z), '0.062500000000000000000000000000000000000000000', 'Testing digits with :z flag parameter 1/16');
is(FatRat.new(1,17).precise(45, :z), '0.058823529411764705882352941176470588235294118', 'Testing digits with :z flag parameter 1/17');
is(FatRat.new(1,18).precise(45, :z), '0.055555555555555555555555555555555555555555556', 'Testing digits with :z flag parameter 1/18');
is(FatRat.new(1,19).precise(45, :z), '0.052631578947368421052631578947368421052631579', 'Testing digits with :z flag parameter 1/19');
is(FatRat.new(1,20).precise(45, :z), '0.050000000000000000000000000000000000000000000', 'Testing digits with :z flag parameter 1/20');
is(FatRat.new(1,21).precise(45, :z), '0.047619047619047619047619047619047619047619048', 'Testing digits with :z flag parameter 1/21');
is(FatRat.new(1,22).precise(45, :z), '0.045454545454545454545454545454545454545454545', 'Testing digits with :z flag parameter 1/22');
is(FatRat.new(1,23).precise(45, :z), '0.043478260869565217391304347826086956521739130', 'Testing digits with :z flag parameter 1/23');
is(FatRat.new(1,24).precise(45, :z), '0.041666666666666666666666666666666666666666667', 'Testing digits with :z flag parameter 1/24');
is(FatRat.new(1,25).precise(45, :z), '0.040000000000000000000000000000000000000000000', 'Testing digits with :z flag parameter 1/25');


is(FatRat.new(1,7**35).precise,         '0.00000000000000000000000000000264', 'FatRat returns 32 places of precision by default');
is(FatRat.new(1,7**35).precise(50),     '0.00000000000000000000000000000263978525985381424962', 'digits parameter works');
is(FatRat.new(1,7**35).precise(54),     '0.00000000000000000000000000000263978525985381424961913', 'Non-significant zeros are trimmed');
is(FatRat.new(1,7**35).precise(54, :z), '0.000000000000000000000000000002639785259853814249619130', 'unless the :z parameter is set');
is(FatRat.new(1,7**35).precise(15),     '0', 'Degenerate non-significant zeros are trimmed');
is(FatRat.new(1,7**35).precise(15, :z), '0.000000000000000', 'unless the :z parameter is set');
is(FatRat.new(1,7**35).precise(0),      '0', 'Zero places returns integer portion only');

is(FatRat.new(9999999999999999999999999999999999999999999999999999999,10000000000000000000000000000000000000000000000000000000).precise,
             '0.9999999999999999999999999999999999999999999999999999999','No rounding when not appropriate');
is(FatRat.new(9999999999999999999999999999999999999999999999999999999,10000000000000000000000000000000000000000000000000000000).precise(15),
             '1', 'Rounds when appropriate');
is(FatRat.new(9999999999999999999999999999999999999999999999999999999,10000000000000000000000000000000000000000000000000000000).precise(15,:z),
             '1.000000000000000', 'Rounds but preserves zeros');

done-testing;
